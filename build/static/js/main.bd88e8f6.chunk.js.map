{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","components/common/like.jsx","components/common/tableBody.jsx","components/common/tableHeader.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/listGroup.jsx","components/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/notFound.jsx","components/customers.jsx","components/rentals.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","toast","Promise","reject","http","get","post","put","delete","all","setJwt","jwt","headers","common","apiEndpoint","movieUrl","movieId","getMovie","saveMovie","movie","a","_id","body","deleteMovie","getGenres","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","className","map","page","href","onClick","Like","liked","onLike","classes","aria-hidden","TableBody","renderCell","item","column","content","path","createKey","key","this","props","data","columns","Component","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","label","Table","length","tokenKey","email","password","localStorage","setItem","getJwt","getItem","auth","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","Link","to","title","deleteColumn","onDelete","user","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","SearchBox","value","onSearch","type","name","placeholder","autoFocus","onChange","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleLike","index","indexOf","setState","handleDelete","originalMovies","filter","m","handleSort","handlePageChange","handleGenreSelect","genre","handleSearch","query","genreList","filteredMovies","toLowerCase","includes","moviesForPage","pageNumber","startIndex","slice","take","paginate","orderBy","totalcount","getPageData","style","marginBottom","NotFound","Customers","Rentals","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","Fragment","Input","errors","rest","htmlFor","Select","options","option","Form","validateProperty","obj","schema","Joi","validate","details","message","abortEarly","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","renderButton","disabled","renderInput","renderSelect","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","integer","min","max","mapToViewModel","history","match","params","replace","populateGenres","populateMovie","onSubmit","LoginForm","username","location","window","from","pathname","Redirect","Logout","register","RegisterForm","userService","ProtectedRoute","component","render","Route","App","Switch","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.bd88e8f6.chunk.js","sourcesContent":["//write import statements here\r\n\r\nfunction init() {\r\n  // code to initialize log service\r\n}\r\n\r\nfunction log(error) {\r\n  //code to log the error\r\n  // for now just logging the error to the console\r\n  console.log(error);\r\n}\r\n\r\nconst logService = {\r\n  init,\r\n  log,\r\n};\r\n\r\nexport default logService;\r\n","import axios from \"axios\";\r\nimport logService from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// setting the base url for the application\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n// this is for handling errors globally\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    // hadling the unexpected errors globally\r\n    logService.log(error);\r\n    toast.error(\"An unexpected error occured\");\r\n  }\r\n  // if it is an expected error then simply return a rejected promise\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  // setting default headers\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nconst http = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  all: axios.all,\r\n  setJwt,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction movieUrl(movieId) {\r\n  return `${apiEndpoint}/${movieId}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport async function saveMovie(movie) {\r\n  // if the movie already exists, then send a put request\r\n  if (movie._id) {\r\n    // the movie object is part of the state on where it's called from\r\n    // so we do not wanna change the movie object directly\r\n    const body = { ...movie };\r\n    delete body._id;\r\n\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React from \"react\";\r\n\r\n//prop types used to come embedded with the earlier vesrsion of react\r\n//now it is in different module and we need to install separately\r\nimport PropTypes from \"prop-types\";\r\n\r\n//importing lodash\r\n//lodash can be written instead of _. Furthermore, lodash is an optimized version\r\n// of a popular javascript library underscore\r\nimport _ from \"lodash\";\r\n\r\n// stateless functional component pagination\r\n// and using object destruturing to get props objects\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  //calculating pagesCount\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  //shows nothing when pagescount is 1\r\n  if (pagesCount === 1) return null;\r\n\r\n  //generating an array using the lodash library\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  //returns the dom element representing the component\r\n  return (\r\n    <nav className=\"page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n            key={page}\r\n          >\r\n            <a\r\n              href=\"/#\"\r\n              onClick={() => onPageChange(page)}\r\n              className=\"page-link\"\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//setting the proptypes and requirement fo props object with PropTypes\r\n//a list of all the proptypes can be found under Advance Guides in reactjs.org\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\n//stateless functional component\r\n// and using object destruturing to get props objects\r\nconst Like = ({ liked, onLike }) => {\r\n  // clickable class for hand pointer icon\r\n  let classes = \"fa clickable fa-heart\";\r\n  if (!liked) classes += \"-o\";\r\n  return <i className={classes} aria-hidden=\"true\" onClick={onLike}></i>;\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n//importing lodash\r\n// we are using lodash get method to render nested properties which cannot be\r\n// rendered using normal bracket notation\r\nimport _ from \"lodash\";\r\n\r\n// class component for table body\r\nclass TableBody extends Component {\r\n  //a renderCell method determines what to render in td element below\r\n  renderCell = (item, column) => {\r\n    // if column has a content method then return the result of calling the content method\r\n    if (column.content) return column.content(item);\r\n    //if column does not have a content method then just return the reuslt of calling the\r\n    //lodash get fucntion to load nested properties of item\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  // this method creates the key for unique key property\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  // render method representing the component\r\n  render() {\r\n    // object destructuring to pick up data\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              //we are goint to call the renderCell method here\r\n              // and call create key method to generate unique key\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\n\r\n// this componnet needs\r\n//table columns: array\r\n//sortColumn: object\r\n//onSort : function\r\n//It's a reusable compnonent that can be used for new tables\r\nclass TableHeader extends Component {\r\n  // A method that cosists of logic to determine the sort order\r\n  raiseSort = (path) => {\r\n    //firt clone the sortcolumn object from the state\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    //if the sortcolumn.path and path match then we just reverse the order\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    //otherwise simply set the path and order to asc\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n\r\n    // now raise the event to update the state in the movies component\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  //this function determines the render icon\r\n  renderSortIcon = (column) => {\r\n    // using object destructuring to get sortColumn property\r\n    const { sortColumn } = this.props;\r\n    // if the column is not current column we do not wanna return any column\r\n    if (column.path !== sortColumn.path) return null;\r\n\r\n    // for ascending order\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n\r\n    //otherwiese render a descing icon\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  // render method for TableHeader component\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            //   apply clickable class to show a hand pointer icon\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => {\r\n                this.raiseSort(column.path);\r\n              }}\r\n            >\r\n              {/* we wanna display the sort icon after the column name */}\r\n              {/* renderSortIcon incapsulates the logic behind rendering the sort icon */}\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\n\r\n//functional component table\r\n// and using object destruturing to get props objects\r\nconst Table = ({ data, sortColumn, onSort, columns }) => {\r\n  // return statement\r\n  return (\r\n    // this table contains two high level components in TableHeader and TableBody\r\n    // which means there is same level of abstraction in this component\r\n    //which is a good programming practise\r\n    <table className=\"table\">\r\n      <caption>Displaying {data.length} data</caption>\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\n// set jwt for httpService\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst auth = {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n\r\nexport default auth;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport auth from \"../services/authService\";\r\n\r\n//component movies table which represents the table displayed in the movies page\r\nclass MoviesTable extends Component {\r\n  // Because this property does not change throughout the lifecycle of this component\r\n  //a simple property is sufficeint i.e. it does have to be a state object\r\n  // It needs two more empty objects for the header of like and delete buttons\r\n\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => <Link to={`movies/${movie._id}`}>{movie.title}</Link>,\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like\r\n          liked={movie.liked}\r\n          onLike={() => {\r\n            this.props.onLike(movie);\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    // content is a function that takes movie as a parameter\r\n    // the content properties are rendered in tableBody component\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => {\r\n          this.props.onDelete(movie._id);\r\n        }}\r\n        className=\"btn btn-danger\"\r\n      >\r\n        delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    // using object destructuring to get props\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        data={movies}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n        columns={this.columns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\n// stateless functional component listgroup\r\n// and using object destruturing to get props objects\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n  selectedItem,\r\n}) => {\r\n  //return DOM element representing the component\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          // clickable class for hand pointer icon\r\n          className={\r\n            item === selectedItem\r\n              ? \"list-group-item clickable active\"\r\n              : \"list-group-item clickable\"\r\n          }\r\n        >\r\n          <a\r\n            href=\"/#\"\r\n            onClick={() => {\r\n              onItemSelect(item);\r\n            }}\r\n          >\r\n            {item[textProperty]}\r\n          </a>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n//setting defualt props for the component so they can be used when the component is\r\n//called by an object which does not have required props\r\n// it reduces the number of props that need to be passed to the component\r\n//which gives better control to the component\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\n// stateless functional component\r\nconst SearchBox = ({ value, onSearch }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"query\"\r\n        //my-3 is margin of 3 on y-axis i.e. top and bottom\r\n        className=\"form-control my-3\"\r\n        placeholder=\"Search...\"\r\n        autoFocus\r\n        value={value}\r\n        onChange={(e) => onSearch(e.currentTarget.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\n// component movies\r\nclass Movies extends Component {\r\n  state = {\r\n    // It's important to initialize these objects so they are not returned\r\n    //as undefined until the lifecycle hook method is called into action\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  //lifecycle hook method which gets called after the component is rendered in the\r\n  //DOM\r\n  async componentDidMount() {\r\n    // calling the server first for genres\r\n    // here we do not need to wrap these methods in try catch block because\r\n    // there are no expected errors and we do not need to revert the\r\n    // UI to it's previous state\r\n    // Furthermore, if an unexpected error occurs than the interceptor\r\n    // kicks in and logs a generic message\r\n    const { data: genreList } = await getGenres();\r\n    const { data: movies } = await getMovies();\r\n    //first we are adding a new genre to the existing list of genres\r\n    //All genres needs to have an _id property cause we are using it as a key\r\n    //while displaying genres in the list later on\r\n    // Adding all genres to the genres list\r\n    const genres = [{ _id: 1, name: \"All Genres\" }, ...genreList];\r\n    // set the list of movies and list of genres to respective state objects\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  // A method that hanles click to the like component\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  // A method that handles delete movies\r\n  // Using optimistic update\r\n  handleDelete = async (movieId) => {\r\n    // store the original movies in case we need to revert back\r\n    const originalMovies = this.state.movies;\r\n    // update the state optimistically\r\n    const movies = originalMovies.filter((m) => m._id !== movieId);\r\n    this.setState({ movies });\r\n    // now call the server\r\n    try {\r\n      await deleteMovie(movieId);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted\");\r\n\r\n      // undo the changes\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  //A method to handle sorting\r\n  handleSort = (sortColumn) => {\r\n    // set the sortColumn to current column\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  // A method that handles page change\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  // A method that handles what to display for a particular genre\r\n  handleGenreSelect = (genre) => {\r\n    //we should also set the current page to one so it does not go to the second page of that genre\r\n    // and reset the searchQuery\r\n    this.setState({\r\n      selectedGenre: genre,\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  // A method that reacts to search query and generates search results\r\n  handleSearch = (query) => {\r\n    //set searchQuery and reset selected genre and currentPage\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n  //A method that gets the data to be displayed\r\n  getPageData() {\r\n    //using object destructuring\r\n    const {\r\n      pageSize,\r\n      movies,\r\n      selectedGenre,\r\n      sortColumn,\r\n      searchQuery,\r\n    } = this.state;\r\n    //using seperate assignment for currentpage because we need it to be a variable\r\n    let { currentPage } = this.state;\r\n\r\n    //make an empty array filteredmovies\r\n    let filteredMovies = movies;\r\n\r\n    //check if there is a search query and decide next step\r\n    if (!searchQuery) {\r\n      //filtering items if selectedGenre is truthy\r\n      filteredMovies =\r\n        selectedGenre && !(selectedGenre._id === 1)\r\n          ? movies.filter((movie) => movie.genre._id === selectedGenre._id)\r\n          : movies;\r\n    } else {\r\n      // get the search results\r\n      filteredMovies = movies.filter(\r\n        (movie) =>\r\n          movie.title.toLowerCase().includes(searchQuery.toLowerCase()) === true\r\n      );\r\n    }\r\n\r\n    //sorting the movies\r\n    const sortedMovies = _.orderBy(\r\n      filteredMovies,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n\r\n    //getting movies from the paginate function\r\n    const moviesForPage = paginate(sortedMovies, currentPage, pageSize);\r\n\r\n    //return an object with totalcount and movies\r\n    return { totalcount: filteredMovies.length, data: moviesForPage };\r\n  }\r\n\r\n  render() {\r\n    //using object destructuring\r\n    const {\r\n      pageSize,\r\n      genres,\r\n      selectedGenre,\r\n      searchQuery,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    const { user } = this.props;\r\n\r\n    //using seperate assignment for currentpage because we need it to be a variable\r\n    let { currentPage } = this.state;\r\n\r\n    // usign object destructuring to get the object properties\r\n    //returned from the method getPageData() and rename data to movies\r\n    const { totalcount, data: movies } = this.getPageData();\r\n\r\n    // render method which represents entire movies component\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={genres}\r\n            selectedItem={selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <div>\r\n              <Link\r\n                to=\"/movies/new\"\r\n                className=\"btn btn-primary\"\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                New movie\r\n              </Link>\r\n            </div>\r\n          )}\r\n\r\n          {<p>Showing {movies.length} movies. </p>}\r\n          <SearchBox value={searchQuery} onSearch={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n            sortColumn={sortColumn}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalcount}\r\n            pageSize={pageSize}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n  // we need to use two lodash methods in a chain\r\n  // but to do that we gotta convert the given array to a lodash object first\r\n  // which is done by _()\r\n  // and finally we need to convert that lodash object to a regular array by chaining a\r\n  //value() method\r\n  // which is returned by this function\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\n// navbar functional component\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n// the spread operator rest extracts other properties in the props object\r\nconst Input = ({ name, label, errors, ...rest }) => {\r\n  return (\r\n    <div className=\"from-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      {/* rest sets the attribute to the itself as type={type} */}\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n\r\n      {errors && <div className=\"alert alert-danger\">{errors}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  // validate proprety method validate only one input not the entire form based on change\r\n  // the argument of the function i.e. input is destructured\r\n  validateProperty = ({ name, value }) => {\r\n    // using computed properties to set the object name dynamically\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  // a basic validate method\r\n  validate = () => {\r\n    // Joi has abort Early true by default\r\n    const options = {\r\n      abortEarly: false,\r\n    };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    // if there's no errors return null\r\n    if (!error) return null;\r\n\r\n    // otherwise need to map the result to an object\r\n    const errors = {};\r\n\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  // we need to create a reference to access the document objects in react\r\n  //username = React.createRef();\r\n  //handle submit method\r\n  handleSubmit = (e) => {\r\n    // this function prevents the full page reload which is the\r\n    // default behaviour of the html forms\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    // Errors property cannot be null cuase we are trying to read it\r\n    // through our input component so it should always be set to an object\r\n    // it will be set to the errors object or an empty object based whether\r\n    //errors is truthy or falsy\r\n    this.setState({ errors: errors || {} });\r\n\r\n    // if there are errors we don't need to call the server\r\n    if (errors) return;\r\n\r\n    // We should never access document object directly in react\r\n    // the whole point of react is to put a level of abstraction\r\n    // over document model so the application would be\r\n    // easier ot maintain and easier to unit test\r\n    // so we can access the document object using hte referece prorerty\r\n    //const username = this.username.current.value;\r\n    // but there's better way of accessing form elements\r\n    //and we should keep the use of ref elements minimum as a rule of thumb\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  //handlechange to update the state\r\n  // currentTarget property of the event(e) object is picked by object\r\n  //destructuring and renamed to input\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    // otherweise clear the errors field\r\n    else delete errors[input.name];\r\n    const data = { ...this.state.data };\r\n    // setting the value dynamically with e.currentTarget\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton = (label) => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    // usign object destructuring\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        errors={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  // this function renders the dropdown list\r\n  renderSelect = (name, label, options) => {\r\n    // usign object destructuring\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        errors={errors[name]}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { getGenres } from \"./../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  // object destructuring to get state property of react link\r\n\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number().integer().min(0).max(100).required(),\r\n    dailyRentalRate: Joi.number().min(0).max(10).required(),\r\n  };\r\n  // a mthod to pupulate genres\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  //a method to populate movie\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      // if the id is new then we do not need to populate the form with a movie object\r\n      if (movieId === \"new\") return;\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      // if movie does not exist then redirect the user to not found\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  //componentDidMount lifecycle hook to initialize values\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  //this function maps the movie object to the type of object required by the form\r\n  // this function basiclally maps movie.genre._id to movie.genreId\r\n  mapToViewModel = (movie) => {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {/* renders the dropdown list */}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n// it's a javascript library for validation\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    // when building form the value of controlled elements cannot be\r\n    //undefined or null in which case an errror is returned\r\n    //so they either need to be set to empty string or some value from the server\r\n    data: { username: \"\", password: \"\" },\r\n\r\n    errors: {},\r\n  };\r\n\r\n  // defining a schema for validation\r\n  //it does not have to be a part of the state because it's not supposed to change\r\n  schema = {\r\n    // we can define the friendly names by using label\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { username, password } = this.state.data;\r\n      await auth.login(username, password);\r\n\r\n      const { state } = this.props.location;\r\n      // redirect the user to homepage\r\n      // we need to do complete reload of the application to call the\r\n      // componentDidMount method of app.js\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // we only wanna use window.location when the user is trynna login\r\n    // so that the application does a full reload and saves the current user\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {/* call render input function */}\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {/* call render button function */}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    // call the logout function\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    // we can define the friendly names by using label\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    // call the server for registration\r\n    try {\r\n      const { headers } = await userService.register(this.state.data);\r\n      // call the auth service to store the token\r\n      auth.loginWithJwt(headers[\"x-auth-token\"]);\r\n      // redirect the user to homepage\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {/* call render input function */}\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {/* call render button function */}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport auth from \"../../services/authService\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  // picking any additional properties along with the ones\r\n  //that we need just in case they are supplied\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        // state object in the redirect component stores the original route the user\r\n        // wanted to go which will be used to reroute the user back to after login\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            ></Redirect>\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport NotFound from \"./components/notFound\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport RegisterForm from \"./components/registerForm\";\nimport auth from \"./services/authService\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <Route path=\"/register\" component={RegisterForm}></Route>\n            {/* we should enclude defalut route porps */}\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            ></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            {/* redirect home page to the movies page */}\n            <Redirect from=\"/\" to=\"/movies\" exact />\n            {/* if none of these match redirect to not found page */}\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//importing bootstrap css\nimport \"bootstrap/dist/css/bootstrap.css\";\n//importing font-awesome-css\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// process is the current process object and env is its enviroment variable property\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\n\nconsole.log(process.env);\n\nReactDOM.render(\n  // BrowserRouter wraps the history object and passes to the components\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}